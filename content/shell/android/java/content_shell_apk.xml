<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2012 The Chromium Authors. All rights reserved.
  Use of this source code is governed by a BSD-style license that can be
  found in the LICENSE file.
-->
<project name="ContentShell" default="debug" basedir=".">
  <description>
    Building ContentShell.apk
  </description>
  <import file="../../../../build/android/ant/common.xml"/>

  <!--
      Convert the buildtype to lowercase. E.g Debug -> debug,
      Release -> release.
  -->
  <script language="javascript">
    project.setProperty("configuration.name",
                        project.getProperty("CONFIGURATION_NAME").toLowerCase())
  </script>
  <property-value name="target.abi" value="${APP_ABI}"/>
  <property-location name="out.dir" location="${PRODUCT_DIR}/content_shell"
      check-exists="false"/>
  <property name="resource.absolute.dir" value="${RESOURCE_DIR}"/>
  <property name="gen.absolute.dir" value="${out.dir}/gen"/>
  <path id="native.libs.gdbserver">
    <fileset file="${android.gdbserver}"/>
  </path>
  <property name="native.libs.absolute.dir" location="${out.dir}/libs"/>
  <property name="asset.absolute.dir" location="${out.dir}/assets"/>
  <!-- Set the output directory for the final apk to the ${apks.dir}. -->
  <property-location name="out.final.file"
      location="${apks.dir}/${ant.project.name}-debug.apk"
      check-exists="false"/>

  <path id="out.dex.jar.input.ref">
    <filelist files="${INPUT_JARS_PATHS}"/>
  </path>
  <echo>resources: ${RESOURCE_DIR} classpath: ${toString:out.dex.jar.input.ref}</echo>
  <target name="-post-compile">
    <!--
      Copy gdbserver to main libs directory if building debug.
      TODO(jrg): for now, Chrome on Android always builds native code
      as Release and java/ant as Debug, which means we always install
      gdbserver.  Resolve this discrepancy, possibly by making this
      Release Official build java/ant as Release.
    -->
    <if>
      <condition>
        <equals arg1="${build.target}" arg2="debug"/>
      </condition>
      <then>
        <echo message="Copying gdbserver to the apk to enable native debugging"/>
        <copy todir="${out.dir}/libs/${target.abi}">
          <path refid="native.libs.gdbserver"/>
        </copy>
      </then>
    </if>

    <!-- Package all the compiled .class files into a .jar. -->
    <jar
      jarfile="${lib.java.dir}/chromium_${PACKAGE_NAME}.jar"
      basedir="${out.classes.absolute.dir}"
    />
  </target>

  <!-- Classpath for javac -->
  <path id="javac.custom.classpath">
    <path refid="out.dex.jar.input.ref"/>
  </path>

  <import file="../../../../build/android/ant/sdk-targets.xml"/>
  <import file="${sdk.dir}/tools/ant/build.xml"/>
</project>
