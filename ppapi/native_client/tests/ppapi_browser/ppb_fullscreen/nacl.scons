# -*- python -*-
# Copyright (c) 2012 The Chromium Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# This test uses ppapi_test_lib.

Import('env')

env.Prepend(CPPDEFINES=['XP_UNIX'])
env.Replace(TEST_DIR='${SOURCE_ROOT}/ppapi/native_client/tests/ppapi_browser/' +
                     'ppb_fullscreen')

nexe = env.ProgramNameForNmf('ppapi_ppb_fullscreen')
env.Alias('ppapi_ppb_fullscreen${PROGSUFFIX}',
          [ '$STAGING_DIR/%s${PROGSUFFIX}' % nexe ])

ppapi_ppb_url_request_info_nexe = env.ComponentProgram(
    nexe,
    [ 'ppapi_ppb_fullscreen.cc' ],
    EXTRA_LIBS=['ppapi',
                'ppapi_test_lib',
                'platform',  # for CHECK
                'pthread',
                'gio',
                ])

env.Publish(nexe, 'run',
            ['ppapi_ppb_fullscreen.html',
             'ppapi_ppb_fullscreen.js'])

node = env.PPAPIBrowserTester('ppapi_ppb_fullscreen_browser_test.out',
                              nmf_names=['ppapi_ppb_fullscreen'],
                              url='ppapi_ppb_fullscreen.html',
                              files=env.ExtractPublishedFiles(nexe),
                              browser_flags=['--enable-pepper-testing'])

# Fatal Error on Mac:
# ERROR:render_widget_host_view_mac.mm(344)] Not implemented reached in virtual
# void RenderWidgetHost ViewMac::InitAsFullscreen(RenderWidgetHostView *)Full
# screen not implemented on Mac
env.AddNodeToTestSuite(
    node,
    ['chrome_browser_tests'],
    'run_ppapi_ppb_fullscreen_browser_test',
    # New PPB_Fullscreen_Dev implementation only allows transitions to
    # fullscreen after a user gesture. Until PPB_Testing has the capabilities
    # to trigger those, we cannot test this automatically.
    # The test can still be run manually. Once it pauses at
    # TestSetFullscreenTrue, click on the purple square to generate a user
    # gesture needed to trigger fullscreen testing.
    #is_broken=(env.PPAPIBrowserTesterIsBroken() or env.Bit('host_mac')))
    is_broken=True)
